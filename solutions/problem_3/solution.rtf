{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\froman\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}{\f5\froman\fprq2\fcharset0 FreeMono;}{\f6\froman\fprq2\fcharset0 FreeSans;}{\f7\froman\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f8\fnil\fprq2\fcharset0 0;}{\f9\fnil\fprq2\fcharset0 Noto Sans CJK SC;}{\f10\fnil\fprq2\fcharset0 Noto Sans Mono CJK SC;}{\f11\fnil\fprq2\fcharset0 Lohit Devanagari;}{\f12\fnil\fprq2\fcharset0 Liberation Mono{\*\falt Courier New};}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052 Normal;}
{\s15\sbasedon0\snext16\rtlch\af11\afs28\alang1081 \ltrch\lang2057\langfe2052\hich\af7\loch\ql\widctlpar\hyphpar0\sb240\sa120\keepn\ltrpar\cf0\f7\fs28\lang2057\kerning1\dbch\af9\langfe2052 Heading;}
{\s16\sbasedon0\snext16\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\sl276\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052 Text Body;}
{\s17\sbasedon16\snext17\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\sl276\slmult1\ql\widctlpar\hyphpar0\sb0\sa140\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052 List;}
{\s18\sbasedon0\snext18\rtlch\af11\afs24\alang1081\ai \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\sb120\sa120\ltrpar\cf0\f3\fs24\lang2057\i\kerning1\dbch\af8\langfe2052 Caption;}
{\s19\sbasedon0\snext19\rtlch\af11\afs24\alang255 \ltrch\lang255\langfe255\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang255\kerning1\dbch\af8\langfe255 Index;}
{\s20\sbasedon0\snext20\rtlch\af12\afs20\alang1081 \ltrch\lang2057\langfe2052\hich\af4\loch\ql\widctlpar\hyphpar0\sb0\sa0\ltrpar\cf0\f4\fs20\lang2057\kerning1\dbch\af10\langfe2052 Preformatted Text;}
}{\*\generator LibreOffice/7.3.7.2$Linux_X86_64 LibreOffice_project/30$Build-2}{\info{\creatim\yr2023\mo5\dy21\hr21\min2}{\revtim\yr2023\mo5\dy22\hr5\min17}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab709
\hyphauto1\viewscale100
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Default Page Style;}}
\formshade\paperh16838\paperw11906\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgndec\sftnnar\saftnnrlc\sectunlocked1\pgwsxn11906\pghsxn16838\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
Problem 3 \u8211\'96 Slow Python Code}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\hich\af6\loch\f6\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
There are a number of general principles that come into play when dealing with slow code. Since this is a performance problem we will be wishing to optimise the code.}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
Questions of performance relate in general to the use of system resources. This }{\hich\af6\loch\f6\loch
typically}{\hich\af6\loch\f6\loch
 involves finding out how the code is utilising the CPU and/or memory/storage resources provided to it by the system. This will allow us to make more informed decisions on how to modify the code, if necessary.}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
Before undertaking this task, }{\hich\af6\loch\f6\loch
however,}{\hich\af6\loch\f6\loch
 it is important to ensure that the code is correct, and providing the expected results \u8211\'96 there is little to be gained from optimising incorrect or buggy code. The provided Python script does in fact contain defective code, and furthermore does not provide any output. For example on line 7 we have a }{\hich\af5\loch\f5\loch
range}{\hich\af6\loch\f6\loch
 object created, which in Python 3 is immutable, yet the body of the subsequent }{\hich\af5\loch\f5\loch
while}{\hich\af6\loch\f6\loch
 loop, at lines 16 and 18, attempts to assign to it, which is illegal. A corrected version }{\hich\af6\loch\f6\loch
of the original script }{\hich\af6\loch\f6\loch
is supplied.}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\hich\af6\loch\f6\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
Using a linter can help identify bugs at an early stage, prior to formal testing. A Linter is a tool which automatically checks code for bugs, syntax errors and issues relating to style. Linters are particularly relevant to interpreted languages, such as Python. Typically a Linter should be used early in the lifecycle of the code, prior to any formal tests. One of the most widely used linting tools for Python is Pylint, which can be installed using pip. It is designed to be used from the command line, for example }{\hich\af5\loch\f5\loch
pylint pyscript.py}{\hich\af6\loch\f6\loch
. Output is normally to standard output, but this can be redirected to a file using the }{\hich\af5\loch\f5\loch
\u8211\'96output}{\hich\af6\loch\f6\loch
 opti}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\hich\af6\loch\f6\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
Since Python is an interpreted, dynamically-typed language, compiling source code to bytecode. This naturally makes Python a slower language than, for example, C or C++. Python can however be extended with pre-compiled modules written in C, which can dramatically speed up Python code.}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
After taking these principles into consideration, if code still appears to be running slowly then we can profile it. Most programming languages come equipped with a profiler, and Python is no different. Two profiling modules are available through Python 3, }{\hich\af5\loch\f5\loch
profile}{\hich\af6\loch\f6\loch
 and }{\hich\af5\loch\f5\loch
cProfile}{\hich\af6\loch\f6\loch
, which share the same interface, and can be }{\hich\af5\loch\f5\loch
import}{\hich\af6\loch\f6\loch
ed just like any other Python module. The latter is written in C, and so is itself potentially more performant.}
\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052\loch

\par \pard\plain \s0\rtlch\af11\afs24\alang1081 \ltrch\lang2057\langfe2052\hich\af3\loch\ql\widctlpar\hyphpar0\ltrpar\cf0\f3\fs24\lang2057\kerning1\dbch\af8\langfe2052{\hich\af6\loch\f6\loch
The following is a basic example of how to use the }{\hich\af5\loch\f5\loch
profile}{\hich\af6\loch\f6\loch
 module. The code for cProfile would be equivalent). We are assuming a function exists called }{\hich\af5\loch\f5\loch
main}{\hich\af6\loch\f6\loch
, which takes no arguments. Example output is also shown, and consists of a table of function calls and execution times.}
\par \pard\plain \s20\rtlch\af12\afs20\alang1081 \ltrch\lang2057\langfe2052\hich\af4\loch\ql\widctlpar\hyphpar0\sb0\sa0\ltrpar\cf0\f4\fs20\lang2057\kerning1\dbch\af10\langfe2052\loch

\par \pard\plain \s20\rtlch\af12\afs20\alang1081 \ltrch\lang2057\langfe2052\hich\af4\loch\ql\widctlpar\hyphpar0\sb0\sa0\ltrpar\cf0\f4\fs20\lang2057\kerning1\dbch\af10\langfe2052{\rtlch\afs24 \ltrch\hich\af5\loch\fs24\f5\loch
import profile}
\par \pard\plain \s20\rtlch\af12\afs20\alang1081 \ltrch\lang2057\langfe2052\hich\af4\loch\ql\widctlpar\hyphpar0\sb0\sa0\ltrpar\cf0\f4\fs20\lang2057\kerning1\dbch\af10\langfe2052\sb0\sa283{\rtlch\afs24 \ltrch\hich\af5\loch\fs24\f5\loch
{\*\bkmkstart line-2-35}{\*\bkmkend line-2-35}profile.run('main()')}
\par }